import { NextRequest, NextResponse } from 'next/server'
import { createClient } from '@supabase/supabase-js'

// Vercel Cron Job –¥–ª—è —Å–±–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
export async function GET(request: NextRequest) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å –æ—Ç Vercel Cron
    const authHeader = request.headers.get('authorization')
    if (authHeader !== `Bearer ${process.env.CRON_SECRET}`) {
      return NextResponse.json({ error: 'Unauthorized' }, { status: 401 })
    }

    console.log('üöÄ Starting GHOST data collection cron job...')

    const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!
    const supabaseKey = process.env.SUPABASE_SERVICE_ROLE_KEY!
    const supabase = createClient(supabaseUrl, supabaseKey)

    const results = {
      news_created: 0,
      market_data_created: 0,
      alerts_created: 0,
      errors: []
    }

    // 1. –°–æ–±–∏—Ä–∞–µ–º —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    const symbols = ['BTCUSDT', 'ETHUSDT', 'ORDIUSDT', 'SOLUSDT', 'ADAUSDT']
    
    for (const symbol of symbols) {
      try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å Binance
        const response = await fetch(`https://fapi.binance.com/fapi/v1/ticker/24hr?symbol=${symbol}`)
        
        if (response.ok) {
          const data = await response.json()
          
          const marketSnapshot = {
            symbol,
            snapshot_timestamp: new Date().toISOString(),
            current_price: parseFloat(data.lastPrice),
            volume_24h: parseFloat(data.volume),
            price_change_24h: parseFloat(data.priceChangePercent),
            high_price: parseFloat(data.highPrice),
            low_price: parseFloat(data.lowPrice),
            open_price: parseFloat(data.openPrice)
          }

          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ Supabase
          const result = await supabase.from('market_snapshots').insert([marketSnapshot])
          
          if (result.error) {
            results.errors.push(`Market data error for ${symbol}: ${result.error.message}`)
          } else {
            results.market_data_created++
            console.log(`üìä Market data saved for ${symbol}: $${marketSnapshot.current_price}`)
          }
        }
      } catch (error) {
        results.errors.push(`Failed to fetch ${symbol}: ${error}`)
      }
    }

    // 2. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ—Å—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä—ã–Ω–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    try {
      const newsItems = []
      
      // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä—ã–Ω–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
      const recentMarketData = await supabase
        .from('market_snapshots')
        .select('*')
        .gte('snapshot_timestamp', new Date(Date.now() - 5 * 60 * 1000).toISOString())
        .order('snapshot_timestamp', { ascending: false })

      if (recentMarketData.data) {
        for (const data of recentMarketData.data.slice(0, 5)) {
          const priceChange = data.price_change_24h || 0
          
          if (Math.abs(priceChange) > 3) { // –ó–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã
            const emoji = priceChange > 0 ? "üìà" : "üìâ"
            const direction = priceChange > 0 ? "—Ä–∞—Å—Ç–µ—Ç" : "–ø–∞–¥–∞–µ—Ç"
            
            const newsItem = {
              title: `${emoji} ${data.symbol.replace('USDT', '')} ${direction} –Ω–∞ ${Math.abs(priceChange).toFixed(2)}%`,
              content: `–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞ ${data.symbol} –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ: ${priceChange > 0 ? '+' : ''}${priceChange.toFixed(2)}% –∑–∞ 24 —á–∞—Å–∞. –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: $${data.current_price}`,
              source_name: 'GHOST Market Monitor',
              url: `https://binance.com/en/futures/${data.symbol}`,
              published_at: new Date().toISOString(),
              category: 'price_alert',
              impact_score: Math.min(Math.abs(priceChange) / 10, 1.0),
              is_critical: Math.abs(priceChange) > 8
            }
            
            newsItems.push(newsItem)
          }
        }
      }

      // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—â–∏–µ —Ä—ã–Ω–æ—á–Ω—ã–µ –Ω–æ–≤–æ—Å—Ç–∏
      const marketNews = [
        {
          title: `üìä –†—ã–Ω–æ—á–Ω—ã–π –æ–±–∑–æ—Ä: ${symbols.length} –∞–∫—Ç–∏–≤–æ–≤ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è`,
          content: `GHOST —Å–∏—Å—Ç–µ–º–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç ${symbols.length} –æ—Å–Ω–æ–≤–Ω—ã—Ö –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏. –î–∞–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É.`,
          source_name: 'GHOST System',
          published_at: new Date().toISOString(),
          category: 'market_update',
          impact_score: 0.3,
          is_critical: false
        }
      ]

      newsItems.push(...marketNews)

      if (newsItems.length > 0) {
        const newsResult = await supabase.from('critical_news').insert(newsItems)
        
        if (newsResult.error) {
          results.errors.push(`News creation error: ${newsResult.error.message}`)
        } else {
          results.news_created = newsItems.length
          console.log(`üì∞ Created ${newsItems.length} news items`)
        }
      }
    } catch (error) {
      results.errors.push(`News generation error: ${error}`)
    }

    // 3. –°–æ–∑–¥–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–µ –∞–ª–µ—Ä—Ç—ã –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
    try {
      const alertsToCreate = []

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —ç–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è —Ü–µ–Ω
      const extremeMovements = await supabase
        .from('market_snapshots')
        .select('*')
        .gte('snapshot_timestamp', new Date(Date.now() - 2 * 60 * 1000).toISOString())
        .or('price_change_24h.gt.10,price_change_24h.lt.-10')

      if (extremeMovements.data && extremeMovements.data.length > 0) {
        for (const movement of extremeMovements.data) {
          alertsToCreate.push({
            alert_type: 'EXTREME_PRICE_MOVEMENT',
            priority: 'HIGH',
            title: `üö® –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ ${movement.symbol}`,
            message: `${movement.symbol} –∏–∑–º–µ–Ω–∏–ª—Å—è –Ω–∞ ${movement.price_change_24h}% –∑–∞ 24 —á–∞—Å–∞`,
            status: 'PENDING',
            delivery_channels: ['dashboard']
          })
        }
      }

      if (alertsToCreate.length > 0) {
        const alertResult = await supabase.from('alerts').insert(alertsToCreate)
        
        if (alertResult.error) {
          results.errors.push(`Alert creation error: ${alertResult.error.message}`)
        } else {
          results.alerts_created = alertsToCreate.length
          console.log(`üîî Created ${alertsToCreate.length} alerts`)
        }
      }
    } catch (error) {
      results.errors.push(`Alert generation error: ${error}`)
    }

    console.log('‚úÖ GHOST cron job completed:', results)

    return NextResponse.json({
      success: true,
      timestamp: new Date().toISOString(),
      results,
      message: `Processed ${results.market_data_created} market updates, ${results.news_created} news items, ${results.alerts_created} alerts`
    })

  } catch (error) {
    console.error('‚ùå GHOST cron job failed:', error)
    
    return NextResponse.json({
      success: false,
      error: error instanceof Error ? error.message : 'Unknown error',
      timestamp: new Date().toISOString()
    }, { status: 500 })
  }
}

// –¢–∞–∫–∂–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º POST –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
export async function POST(request: NextRequest) {
  return GET(request)
}
