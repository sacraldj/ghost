#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞—Å—á–µ—Ç–æ–≤ ROI –≤ position_exit_tracker.py
"""

def test_roi_calculation():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç—ã ROI –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –∏–∑ –ª–æ–≥–æ–≤"""
    
    # –î–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–∏–º–µ—Ä–∞
    entry_price = 0.82230
    tp1_price = 0.8288
    tp2_price = 0.8321
    actual_exit_price = 0.83260  # —Ü–µ–Ω–∞ –≤—ã—Ö–æ–¥–∞
    qty = 243.2000
    margin_used = 2.77334401
    fee_rate = 0.00055
    
    qty_half = qty / 2
    
    print("=== –¢–ï–°–¢ –†–ê–°–ß–ï–¢–û–í ROI ===\n")
    
    # –°—Ç–∞—Ä—ã–π —Ä–∞—Å—á–µ—Ç (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π)
    print("üî¥ –°–¢–ê–†–´–ô –†–ê–°–ß–ï–¢ (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π):")
    profit_tp1_old = (tp1_price - entry_price) * qty_half
    fee_tp1_old = (entry_price + tp1_price) * qty_half * fee_rate
    pnl_tp1_net_old = profit_tp1_old - fee_tp1_old
    
    # –°—Ç–∞—Ä—ã–π —Ä–∞—Å—á–µ—Ç TP2 (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π - —Å—á–∏—Ç–∞–ª –∫–∞–∫ –±—É–¥—Ç–æ TP2 –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç)
    profit_tp2_old = 0  # –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!
    fee_tp2_old = entry_price * 2 * qty_half * fee_rate
    pnl_tp2_net_old = -fee_tp2_old
    
    pnl_final_old = pnl_tp1_net_old + pnl_tp2_net_old
    roi_final_old = (pnl_final_old / margin_used) * 100
    
    print(f"TP1 PnL: {pnl_tp1_net_old:.4f} USDT")
    print(f"TP2 PnL: {pnl_tp2_net_old:.4f} USDT")
    print(f"–ò—Ç–æ–≥–æ PnL: {pnl_final_old:.4f} USDT")
    print(f"ROI: {roi_final_old:.2f}%\n")
    
    # –ù–æ–≤—ã–π —Ä–∞—Å—á–µ—Ç (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π)
    print("üü¢ –ù–û–í–´–ô –†–ê–°–ß–ï–¢ (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π):")
    
    # TP1 - –ø–æ–ª–æ–≤–∏–Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ TP1
    profit_tp1_new = (tp1_price - entry_price) * qty_half
    fee_tp1_new = (entry_price + tp1_price) * qty_half * fee_rate
    pnl_tp1_net_new = profit_tp1_new - fee_tp1_new
    
    # TP2 - –æ—Å—Ç–∞–≤—à–∞—è—Å—è –ø–æ–ª–æ–≤–∏–Ω–∞ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ TP2 (—Ç–∞–∫ –∫–∞–∫ TP2 –¥–æ—Å—Ç–∏–≥–Ω—É—Ç)
    profit_tp2_new = (tp2_price - entry_price) * qty_half
    fee_tp2_new = (entry_price + tp2_price) * qty_half * fee_rate
    pnl_tp2_net_new = profit_tp2_new - fee_tp2_new
    
    pnl_final_new = pnl_tp1_net_new + pnl_tp2_net_new
    roi_final_new = (pnl_final_new / margin_used) * 100
    
    print(f"TP1 PnL: {pnl_tp1_net_new:.4f} USDT")
    print(f"TP2 PnL: {pnl_tp2_net_new:.4f} USDT")
    print(f"–ò—Ç–æ–≥–æ PnL: {pnl_final_new:.4f} USDT")
    print(f"ROI: {roi_final_new:.2f}%\n")
    
    # –†–∞—Å—á–µ—Ç –ø–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Ü–µ–Ω–µ –≤—ã—Ö–æ–¥–∞
    print("üìä –†–ê–°–ß–ï–¢ –ü–û –§–ê–ö–¢–ò–ß–ï–°–ö–û–ô –¶–ï–ù–ï –í–´–•–û–î–ê:")
    
    # TP1 - –ø–æ–ª–æ–≤–∏–Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ TP1
    profit_tp1_actual = (tp1_price - entry_price) * qty_half
    fee_tp1_actual = (entry_price + tp1_price) * qty_half * fee_rate
    pnl_tp1_net_actual = profit_tp1_actual - fee_tp1_actual
    
    # TP2 - –æ—Å—Ç–∞–≤—à–∞—è—Å—è –ø–æ–ª–æ–≤–∏–Ω–∞ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–π —Ü–µ–Ω–µ –≤—ã—Ö–æ–¥–∞
    profit_tp2_actual = (actual_exit_price - entry_price) * qty_half
    fee_tp2_actual = (entry_price + actual_exit_price) * qty_half * fee_rate
    pnl_tp2_net_actual = profit_tp2_actual - fee_tp2_actual
    
    pnl_final_actual = pnl_tp1_net_actual + pnl_tp2_net_actual
    roi_final_actual = (pnl_final_actual / margin_used) * 100
    
    print(f"TP1 PnL: {pnl_tp1_net_actual:.4f} USDT")
    print(f"TP2 PnL (–ø–æ {actual_exit_price}): {pnl_tp2_net_actual:.4f} USDT")
    print(f"–ò—Ç–æ–≥–æ PnL: {pnl_final_actual:.4f} USDT")
    print(f"ROI: {roi_final_actual:.2f}%\n")
    
    # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –ª–æ–≥–æ–≤
    print("üìà –°–†–ê–í–ù–ï–ù–ò–ï –° –õ–û–ì–ê–ú–ò:")
    print(f"–õ–æ–≥–∏ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç ROI: 20.55%")
    print(f"–ù–∞—à —Ä–∞—Å—á–µ—Ç: {roi_final_actual:.2f}%")
    print(f"–†–∞–∑–Ω–∏—Ü–∞: {abs(roi_final_actual - 20.55):.2f}%\n")
    
    # –î–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞—Å—á–µ—Ç
    print("üîç –î–ï–¢–ê–õ–¨–ù–´–ô –†–ê–°–ß–ï–¢:")
    print(f"Entry: {entry_price}")
    print(f"TP1: {tp1_price} (–¥–æ—Å—Ç–∏–≥–Ω—É—Ç)")
    print(f"TP2: {tp2_price} (–¥–æ—Å—Ç–∏–≥–Ω—É—Ç)")
    print(f"Exit: {actual_exit_price}")
    print(f"Qty: {qty}")
    print(f"Qty_half: {qty_half}")
    print(f"Margin: {margin_used}")
    print(f"Fee rate: {fee_rate}")
    
    print(f"\nTP1 —Ä–∞—Å—á–µ—Ç:")
    print(f"  Profit: ({tp1_price} - {entry_price}) * {qty_half} = {profit_tp1_actual:.4f}")
    print(f"  Fee: ({entry_price} + {tp1_price}) * {qty_half} * {fee_rate} = {fee_tp1_actual:.4f}")
    print(f"  Net: {profit_tp1_actual:.4f} - {fee_tp1_actual:.4f} = {pnl_tp1_net_actual:.4f}")
    
    print(f"\nTP2 —Ä–∞—Å—á–µ—Ç:")
    print(f"  Profit: ({actual_exit_price} - {entry_price}) * {qty_half} = {profit_tp2_actual:.4f}")
    print(f"  Fee: ({entry_price} + {actual_exit_price}) * {qty_half} * {fee_rate} = {fee_tp2_actual:.4f}")
    print(f"  Net: {profit_tp2_actual:.4f} - {fee_tp2_actual:.4f} = {pnl_tp2_net_actual:.4f}")
    
    print(f"\n–ò—Ç–æ–≥–æ: {pnl_tp1_net_actual:.4f} + {pnl_tp2_net_actual:.4f} = {pnl_final_actual:.4f}")
    print(f"ROI: ({pnl_final_actual:.4f} / {margin_used}) * 100 = {roi_final_actual:.2f}%")

def test_be_exit():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–ª—É—á–∞–π, –∫–æ–≥–¥–∞ TP2 –Ω–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç (–≤—ã—Ö–æ–¥ –ø–æ BE)"""
    
    print("\n" + "="*50)
    print("–¢–ï–°–¢: TP2 –ù–ï –î–û–°–¢–ò–ì–ù–£–¢ (–≤—ã—Ö–æ–¥ –ø–æ BE)")
    print("="*50)
    
    # –î–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∞ BE
    entry_price = 0.82230
    tp1_price = 0.8288
    tp2_price = 0.8321
    be_exit_price = 0.8250  # —Ü–µ–Ω–∞ –≤—ã—Ö–æ–¥–∞ –ø–æ BE (–º–µ–∂–¥—É entry –∏ TP1)
    qty = 243.2000
    margin_used = 2.77334401
    fee_rate = 0.00055
    
    qty_half = qty / 2
    
    print(f"Entry: {entry_price}")
    print(f"TP1: {tp1_price} (–¥–æ—Å—Ç–∏–≥–Ω—É—Ç)")
    print(f"TP2: {tp2_price} (–ù–ï –¥–æ—Å—Ç–∏–≥–Ω—É—Ç)")
    print(f"BE Exit: {be_exit_price}")
    print(f"Qty: {qty}")
    print(f"Qty_half: {qty_half}")
    
    # TP1 - –ø–æ–ª–æ–≤–∏–Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ TP1
    profit_tp1 = (tp1_price - entry_price) * qty_half
    fee_tp1 = (entry_price + tp1_price) * qty_half * fee_rate
    pnl_tp1_net = profit_tp1 - fee_tp1
    
    # TP2 - –æ—Å—Ç–∞–≤—à–∞—è—Å—è –ø–æ–ª–æ–≤–∏–Ω–∞ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è –ø–æ BE —Ü–µ–Ω–µ
    profit_tp2 = (be_exit_price - entry_price) * qty_half
    fee_tp2 = (entry_price + be_exit_price) * qty_half * fee_rate
    pnl_tp2_net = profit_tp2 - fee_tp2
    
    pnl_final = pnl_tp1_net + pnl_tp2_net
    roi_final = (pnl_final / margin_used) * 100
    
    print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢:")
    print(f"TP1 PnL: {pnl_tp1_net:.4f} USDT")
    print(f"TP2 PnL (BE): {pnl_tp2_net:.4f} USDT")
    print(f"–ò—Ç–æ–≥–æ PnL: {pnl_final:.4f} USDT")
    print(f"ROI: {roi_final:.2f}%")
    
    print(f"\nüîç –î–ï–¢–ê–õ–¨–ù–´–ô –†–ê–°–ß–ï–¢:")
    print(f"TP1: ({tp1_price} - {entry_price}) * {qty_half} = {profit_tp1:.4f}")
    print(f"TP1 Fee: ({entry_price} + {tp1_price}) * {qty_half} * {fee_rate} = {fee_tp1:.4f}")
    print(f"TP1 Net: {profit_tp1:.4f} - {fee_tp1:.4f} = {pnl_tp1_net:.4f}")
    
    print(f"TP2 (BE): ({be_exit_price} - {entry_price}) * {qty_half} = {profit_tp2:.4f}")
    print(f"TP2 Fee: ({entry_price} + {be_exit_price}) * {qty_half} * {fee_rate} = {fee_tp2:.4f}")
    print(f"TP2 Net: {profit_tp2:.4f} - {fee_tp2:.4f} = {pnl_tp2_net:.4f}")

if __name__ == "__main__":
    test_roi_calculation()
    test_be_exit() 