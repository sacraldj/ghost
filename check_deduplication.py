#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏
"""

import asyncio
import sys
import os
from datetime import datetime, timedelta

sys.path.append(os.path.dirname(os.path.abspath(__file__)))

async def check_deduplication():
    from signals.signal_orchestrator_with_supabase import orchestrator_with_supabase
    
    print("üîç –ü–†–û–í–ï–†–ö–ê –î–ï–î–£–ü–õ–ò–ö–ê–¶–ò–ò")
    print("=" * 40)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å–∏—Å—Ç–µ–º—ã
    stats = await orchestrator_with_supabase.get_stats()
    
    print(f"üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –°–ò–°–¢–ï–ú–´:")
    print(f"  ‚Ä¢ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ —Å–∏–≥–Ω–∞–ª–æ–≤: {stats.get('signals_processed', 0)}")
    print(f"  ‚Ä¢ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ –±–∞–∑—É: {stats.get('signals_saved', 0)}")  
    print(f"  ‚Ä¢ –°—ã—Ä—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {stats.get('raw_signals_saved', 0)}")
    print(f"  ‚Ä¢ –î—É–±–ª–∏–∫–∞—Ç–æ–≤ –ø—Ä–æ–ø—É—â–µ–Ω–æ: {stats.get('duplicates_skipped', 0)}")
    print(f"  ‚Ä¢ –û—à–∏–±–æ–∫ Supabase: {stats.get('supabase_errors', 0)}")
    print(f"  ‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {stats.get('uptime_human', '0:00:00')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if orchestrator_with_supabase.supabase:
        # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –º–∏–Ω—É—Ç
        five_min_ago = (datetime.now() - timedelta(minutes=5)).isoformat()
        recent = orchestrator_with_supabase.supabase.table('signals_raw').select('*').gte('created_at', five_min_ago).order('created_at', desc=True).limit(10).execute()
        
        print(f"\nüì• –ü–û–°–õ–ï–î–ù–ò–ï –°–û–û–ë–©–ï–ù–ò–Ø (5 –º–∏–Ω):")
        print(f"  –í—Å–µ–≥–æ: {len(recent.data)}")
        
        for i, msg in enumerate(recent.data[:5], 1):
            time = msg.get('created_at', '')[:19].replace('T', ' ')
            trader = msg.get('trader_id', 'N/A')[:15]
            text = msg.get('text', '')[:40].replace('\n', ' ')
            print(f"  {i}. [{time}] {trader}: {text}...")
    
    print(f"\n‚úÖ –î–ï–î–£–ü–õ–ò–ö–ê–¶–ò–Ø: {'–†–ê–ë–û–¢–ê–ï–¢' if stats.get('duplicates_skipped', 0) > 0 else '–û–ñ–ò–î–ê–ù–ò–ï –î–£–ë–õ–ò–ö–ê–¢–û–í'}")

if __name__ == "__main__":
    asyncio.run(check_deduplication())
