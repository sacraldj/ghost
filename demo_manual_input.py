#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –∫–æ–¥–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
–ë–ï–ó —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram
"""

import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def demo_manual_code_input():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –∫–æ–¥–∞"""
    try:
        from core.telegram_auto_auth import TelegramAutoAuth
        
        print("üé≠ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –†–£–ß–ù–û–ì–û –í–í–û–î–ê –ö–û–î–ê")
        print("=" * 40)
        print("–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ë–ï–ó —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram")
        print("-" * 40)
        
        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä auth –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        auth = TelegramAutoAuth("12345", "test_hash", "+1234567890", interactive=True)
        
        print("\nüîç –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é get_manual_code_input...")
        code = auth.get_manual_code_input("+1234567890")
        
        if code:
            print(f"\n‚úÖ –ü–æ–ª—É—á–µ–Ω –∫–æ–¥: {code}")
            print("üîç –ü—Ä–æ–≤–µ—Ä–∏–º –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å –∫–æ–¥–∞:")
            
            if code.isdigit() and len(code) == 5:
                print("‚úÖ –ö–æ–¥ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π: 5 —Ü–∏—Ñ—Ä")
            elif code.isdigit():
                print(f"‚ö†Ô∏è –ö–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç {len(code)} —Ü–∏—Ñ—Ä (–æ–∂–∏–¥–∞–µ—Ç—Å—è 5)")
            else:
                print("‚ùå –ö–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ—Ü–∏—Ñ—Ä–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã")
        else:
            print("‚ùå –ö–æ–¥ –Ω–µ –±—ã–ª –≤–≤–µ–¥–µ–Ω –∏–ª–∏ –≤–≤–æ–¥ –ø—Ä–µ—Ä–≤–∞–Ω")
            
    except KeyboardInterrupt:
        print("\n‚ùå –î–µ–º–æ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")

def show_feature_overview():
    """–ü–æ–∫–∞–∑–∞—Ç—å –æ–±–∑–æ—Ä –Ω–æ–≤—ã—Ö –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π"""
    print("\nüöÄ –ù–û–í–´–ï –í–û–ó–ú–û–ñ–ù–û–°–¢–ò –°–ò–°–¢–ï–ú–´ –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò")
    print("=" * 50)
    
    features = [
        "üõ°Ô∏è –ó–∞—â–∏—Ç–∞ –æ—Ç –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π (max 3 –ø–æ–ø—ã—Ç–∫–∏ –≤ –¥–µ–Ω—å)",
        "‚è∞ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ–ø—ã—Ç–æ–∫ –≤ —á–∞—Å (max 2 –ø–æ–ø—ã—Ç–∫–∏)",
        "üîÑ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π fallback –Ω–∞ —Ä—É—á–Ω–æ–π –≤–≤–æ–¥ –ø–æ—Å–ª–µ 3 –Ω–µ—É–¥–∞—á–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫",
        "üîë –†—É—á–Ω–æ–π –≤–≤–æ–¥ –∫–æ–¥–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –Ω–µ—É–¥–∞—á–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ",
        "üîí –†—É—á–Ω–æ–π –≤–≤–æ–¥ –ø–∞—Ä–æ–ª—è 2FA –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è",
        "üìä –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏",
        "üö´ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ FloodWaitError –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫",
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–π –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π/–Ω–µ–∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º"
    ]
    
    for i, feature in enumerate(features, 1):
        print(f"{i:2d}. {feature}")
    
    print("\nüí° –†–ï–ñ–ò–ú–´ –†–ê–ë–û–¢–´:")
    print("   interactive=True  - –≤–∫–ª—é—á–∞–µ—Ç —Ä—É—á–Ω–æ–π –≤–≤–æ–¥ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)")
    print("   interactive=False - —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º")
    
    print("\nüîß –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:")
    print("   # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å —Ä—É—á–Ω—ã–º –≤–≤–æ–¥–æ–º")
    print("   client = await create_auto_auth_client()")
    print("   ")
    print("   # –¢–æ–ª—å–∫–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —Ä–µ–∂–∏–º (–¥–ª—è —Å–µ—Ä–≤–µ—Ä–æ–≤)")
    print("   client = await create_auto_auth_client(interactive=False)")

def show_protection_status():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –∑–∞—â–∏—Ç—ã"""
    try:
        from dotenv import load_dotenv
        load_dotenv()
        
        from core.telegram_rate_limiter import TelegramRateLimiter
        
        rate_limiter = TelegramRateLimiter()
        phone = os.getenv('TELEGRAM_PHONE')
        
        if phone:
            print(f"\nüõ°Ô∏è –°–¢–ê–¢–£–° –ó–ê–©–ò–¢–´ –î–õ–Ø {phone}")
            print("-" * 40)
            
            can_attempt, reason = rate_limiter.can_attempt_auth(phone)
            stats = rate_limiter.get_stats(phone)
            
            if can_attempt:
                print("‚úÖ –ü–æ–ø—ã—Ç–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –†–ê–ó–†–ï–®–ï–ù–´")
            else:
                print("üö´ –ü–æ–ø—ã—Ç–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–´")
                print(f"   –ü—Ä–∏—á–∏–Ω–∞: {reason}")
            
            print(f"\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
            print(f"   –ü–æ–ø—ã—Ç–æ–∫ —Å–µ–≥–æ–¥–Ω—è: {stats['attempts_today']}/{stats['max_attempts_per_day']}")
            print(f"   –ü–æ–ø—ã—Ç–æ–∫ –≤ —ç—Ç–æ–º —á–∞—Å—É: {stats['attempts_this_hour']}/{stats['max_attempts_per_hour']}")
            print(f"   –£—Å–ø–µ—à–Ω—ã—Ö: {stats['successful_today']}")
            print(f"   –ù–µ—É–¥–∞—á–Ω—ã—Ö: {stats['failed_today']}")
            
            if stats['is_blocked']:
                hours = stats['block_remaining_seconds'] // 3600
                minutes = (stats['block_remaining_seconds'] % 3600) // 60
                print(f"   üö´ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞: {hours}—á {minutes}–º")
        else:
            print("\n‚ö†Ô∏è TELEGRAM_PHONE –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env")
            
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –£–õ–£–ß–®–ï–ù–ù–û–ô –°–ò–°–¢–ï–ú–´ –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò TELEGRAM")
    print("üîß –° —Ä—É—á–Ω—ã–º –≤–≤–æ–¥–æ–º –∏ –∑–∞—â–∏—Ç–æ–π –æ—Ç –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫")
    print("=" * 65)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±–∑–æ—Ä –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
    show_feature_overview()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞—â–∏—Ç—ã
    show_protection_status()
    
    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä—É—á–Ω–æ–π –≤–≤–æ–¥
    print("\n" + "="*50)
    choice = input("‚ùì –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –∫–æ–¥–∞? (y/N): ").strip().lower()
    
    if choice in ['y', 'yes', '–¥–∞', '—É']:
        demo_manual_code_input()
    else:
        print("‚è≠Ô∏è –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä—É—á–Ω–æ–≥–æ –≤–≤–æ–¥–∞ –ø—Ä–æ–ø—É—â–µ–Ω–∞")
    
    print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüí° –î–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: python test_manual_auth.py")

if __name__ == "__main__":
    main()
