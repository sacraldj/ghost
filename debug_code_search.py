#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–∫–∞ –ø–æ–∏—Å–∫–∞ –∫–æ–¥–∞ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –ø–æ–∏—Å–∫–µ
"""

import asyncio
import os
import re
from datetime import datetime, timedelta
from telethon import TelegramClient
from dotenv import load_dotenv

load_dotenv()

def extract_code_debug(text: str):
    """–û—Ç–ª–∞–¥–æ—á–Ω–∞—è –≤–µ—Ä—Å–∏—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∫–æ–¥–∞"""
    if not text:
        return None
    
    print(f"üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç: '{text}'")
    
    patterns = [
        r'Login code:\s*(\d{5,6})',
        r'–ö–æ–¥ –¥–ª—è –≤—Ö–æ–¥–∞:\s*(\d{5,6})', 
        r'(\d{5,6})\s*is your',
        r'(\d{5,6})'
    ]
    
    for i, pattern in enumerate(patterns):
        match = re.search(pattern, text, re.IGNORECASE)
        if match:
            code = match.group(1)
            print(f"‚úÖ –ü–∞—Ç—Ç–µ—Ä–Ω {i+1} –Ω–∞—à–µ–ª –∫–æ–¥: {code}")
            if code.isdigit() and 4 <= len(code) <= 6:
                print(f"‚úÖ –ö–æ–¥ {code} –≤–∞–ª–∏–¥–Ω—ã–π")
                return code
            else:
                print(f"‚ùå –ö–æ–¥ {code} –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–π")
    
    print("‚ùå –ö–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω")
    return None

async def debug_search():
    api_id = int(os.getenv('TELEGRAM_API_ID'))
    api_hash = os.getenv('TELEGRAM_API_HASH')
    
    client = TelegramClient('ghost_code_reader', api_id, api_hash)
    
    try:
        await client.connect()
        
        print("üîç –û–¢–õ–ê–î–ö–ê –ü–û–ò–°–ö–ê –ö–û–î–ê")
        print("=" * 40)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram Service
        entity = await client.get_entity(777000)
        
        print("üì± –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ Telegram Service:")
        now = datetime.now()
        
        async for message in client.iter_messages(entity, limit=5):
            if message.message and message.date:
                time_diff = now - message.date.replace(tzinfo=None)
                time_diff_minutes = time_diff.total_seconds() / 60
                
                print(f"\n‚è∞ {message.date} ({time_diff_minutes:.1f} –º–∏–Ω –Ω–∞–∑–∞–¥)")
                print(f"üìù –¢–µ–∫—Å—Ç: {message.message[:100]}...")
                
                code = extract_code_debug(message.message)
                if code:
                    print(f"üéØ –ù–ê–ô–î–ï–ù–ù–´–ô –ö–û–î: {code}")
                print("-" * 40)
        
        # –¢–µ—Å—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ª–æ–≥–∏–∫–∏
        print(f"\nüïê –¢–ï–ö–£–©–ï–ï –í–†–ï–ú–Ø: {now}")
        print(f"üïê –ü–û–ò–°–ö –ö–û–î–û–í –ü–û–°–õ–ï: {now - timedelta(minutes=2)}")
        
    finally:
        await client.disconnect()

if __name__ == "__main__":
    asyncio.run(debug_search())
