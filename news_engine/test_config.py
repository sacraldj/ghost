#!/usr/bin/env python3
"""
GHOST News Engine - Test Configuration
–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏ API –∫–ª—é—á–∏
"""

import os
import sys
from pathlib import Path
from config_loader import ConfigLoader

def test_env_file():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ .env —Ñ–∞–π–ª–∞"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ .env...")
    
    # –ò—â–µ–º .env –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞ Ghost/
    current_dir = Path(__file__).parent
    root_dir = current_dir.parent  # –ü–æ–¥–Ω–∏–º–∞–µ–º—Å—è –Ω–∞ 1 —É—Ä–æ–≤–µ–Ω—å –≤–≤–µ—Ä—Ö –æ—Ç news_engine/ –¥–æ Ghost/
    env_path = root_dir / ".env"
    
    if not env_path.exists():
        print(f"‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞: {env_path}")
        print("üí° –°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π: cp env.example .env")
        return False
    
    print("‚úÖ –§–∞–π–ª .env –Ω–∞–π–¥–µ–Ω")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    with open(env_path, 'r') as f:
        lines = f.readlines()
    
    api_keys = []
    for line in lines:
        line = line.strip()
        if line and not line.startswith('#') and '=' in line:
            key, value = line.split('=', 1)
            if 'API_KEY' in key or 'TOKEN' in key or 'SECRET' in key:
                api_keys.append((key, value))
    
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ {len(api_keys)} API –∫–ª—é—á–µ–π:")
    for key, value in api_keys:
        if value.startswith('your_') or value.startswith('${'):
            print(f"  ‚ö†Ô∏è  {key}: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        else:
            print(f"  ‚úÖ {key}: –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
    
    return True

def test_config_loading():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        config_path = Path(__file__).parent.parent / "news_engine_config.yaml"
        loader = ConfigLoader(str(config_path))
        config = loader.load_config()
        print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ")
        return config
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return None

def test_api_connections(config):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API"""
    if not config:
        return
    
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ API...")
    
    # –ü—Ä–æ—Å—Ç—ã–µ —Ç–µ—Å—Ç—ã –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö API
    test_apis = [
        ('newsapi', 'NEWS_API_KEY'),
        ('cryptocompare', 'CRYPTOCOMPARE_API_KEY'),
        ('alphavantage', 'ALPHA_VANTAGE_API_KEY'),
    ]
    
    for api_name, env_key in test_apis:
        if api_name in config.get('sources', {}):
            source_config = config['sources'][api_name]
            if source_config.get('enabled', False):
                api_key = source_config.get('api_key', '')
                if api_key and not api_key.startswith('${'):
                    print(f"  ‚úÖ {api_name}: –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
                else:
                    print(f"  ‚ö†Ô∏è  {api_name}: –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            else:
                print(f"  ‚ùå {api_name}: –æ—Ç–∫–ª—é—á–µ–Ω")
        else:
            print(f"  ‚ùå {api_name}: –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ GHOST News Engine - –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .env —Ñ–∞–π–ª
    if not test_env_file():
        sys.exit(1)
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    config = test_config_loading()
    if not config:
        sys.exit(1)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º API
    test_api_connections(config)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–≤–æ–¥–∫—É
    print("\nüìã –°–≤–æ–¥–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
    print("=" * 50)
    
    if 'sources' in config:
        sources = config['sources']
        enabled_count = sum(1 for s in sources.values() if s.get('enabled', False))
        total_count = len(sources)
        print(f"üì∞ –í—Å–µ–≥–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {total_count}")
        print(f"‚úÖ –í–∫–ª—é—á–µ–Ω–Ω—ã—Ö: {enabled_count}")
        print(f"‚ùå –û—Ç–∫–ª—é—á–µ–Ω–Ω—ã—Ö: {total_count - enabled_count}")
    
    print("\nüéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    if not os.getenv('NEWS_API_KEY'):
        print("  ‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á –Ω–∞ https://newsapi.org/ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)")
    if not os.getenv('CRYPTOCOMPARE_API_KEY'):
        print("  ‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á –Ω–∞ https://www.cryptocompare.com/ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)")
    if not os.getenv('ALPHA_VANTAGE_API_KEY'):
        print("  ‚Ä¢ –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á –Ω–∞ https://www.alphavantage.co/ (–±–µ—Å–ø–ª–∞—Ç–Ω–æ)")
    
    print("\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    main()
