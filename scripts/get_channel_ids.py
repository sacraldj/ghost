#!/usr/bin/env python3
"""
GHOST Channel ID Getter
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID Telegram –∫–∞–Ω–∞–ª–æ–≤
"""

import asyncio
import logging
import os
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
project_root = Path(__file__).parent.parent
sys.path.insert(0, str(project_root))

try:
    from telethon import TelegramClient
    from telethon.tl.types import Channel, Chat
except ImportError:
    print("‚ùå Telethon –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏: pip install telethon")
    sys.exit(1)

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def get_channel_ids():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ ID –∫–∞–Ω–∞–ª–æ–≤"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ .env.local
    env_file = project_root / '.env.local'
    
    if not env_file.exists():
        print("‚ùå –§–∞–π–ª .env.local –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –ß–∏—Ç–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    with open(env_file, 'r') as f:
        for line in f:
            if '=' in line and not line.startswith('#'):
                key, value = line.strip().split('=', 1)
                value = value.strip('"\'')
                os.environ[key] = value
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–µ–π
    api_id = os.getenv('TELEGRAM_API_ID')
    api_hash = os.getenv('TELEGRAM_API_HASH')
    phone = os.getenv('TELEGRAM_PHONE')
    
    if not all([api_id, api_hash]):
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω—ã TELEGRAM_API_ID –∏–ª–∏ TELEGRAM_API_HASH –≤ .env.local")
        print("üìù –î–æ–±–∞–≤—å –∏—Ö –≤ .env.local:")
        print('TELEGRAM_API_ID="—Ç–≤–æ–π_api_id"')
        print('TELEGRAM_API_HASH="—Ç–≤–æ–π_api_hash"')
        print('TELEGRAM_PHONE="+—Ç–≤–æ–π_–Ω–æ–º–µ—Ä"')
        return
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        client = TelegramClient('ghost_channel_scanner', api_id, api_hash)
        
        print("üîó –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ Telegram...")
        await client.start(phone=phone)
        
        if not await client.is_user_authorized():
            print("‚ùå –ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –≤ Telegram")
            return
        
        me = await client.get_me()
        print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –∫–∞–∫: {me.first_name} (@{me.username or '–Ω–µ—Ç username'})")
        
        print("\nüìã –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –∫–∞–Ω–∞–ª–æ–≤ –∏ —á–∞—Ç–æ–≤...")
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–∏–∞–ª–æ–≥–∏
        dialogs = await client.get_dialogs()
        
        print(f"\nüîç –ù–∞–π–¥–µ–Ω–æ {len(dialogs)} –¥–∏–∞–ª–æ–≥–æ–≤:")
        print("=" * 80)
        
        channels_found = 0
        
        for dialog in dialogs:
            entity = dialog.entity
            
            # –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∫–∞–Ω–∞–ª—ã –∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã
            if isinstance(entity, Channel):
                channels_found += 1
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø
                entity_type = "–ö–∞–Ω–∞–ª" if entity.broadcast else "–°—É–ø–µ—Ä–≥—Ä—É–ø–ø–∞"
                
                # –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
                title = entity.title or "–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è"
                username = f"@{entity.username}" if entity.username else "–ü—Ä–∏–≤–∞—Ç–Ω—ã–π"
                subscribers = entity.participants_count if hasattr(entity, 'participants_count') else "?"
                
                print(f"\nüîπ {entity_type}: {title}")
                print(f"   ID: {entity.id}")
                print(f"   Username: {username}")
                print(f"   –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {subscribers}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
                if any(keyword in title.lower() for keyword in ['signal', 'trade', 'crypto', 'vip']):
                    print(f"   ‚≠ê –†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏–≥–Ω–∞–ª–æ–≤!")
                
                print(f"   üìã –î–ª—è config: \"channel_id\": \"{entity.id}\"")
        
        if channels_found == 0:
            print("\n‚ùå –ö–∞–Ω–∞–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
            print("üí° –ü–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã —Å —Ç–æ—Ä–≥–æ–≤—ã–º–∏ —Å–∏–≥–Ω–∞–ª–∞–º–∏ –∏ –∑–∞–ø—É—Å—Ç–∏ —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞")
        else:
            print(f"\n‚úÖ –ù–∞–π–¥–µ–Ω–æ {channels_found} –∫–∞–Ω–∞–ª–æ–≤")
            print("\nüìù –°–∫–æ–ø–∏—Ä—É–π –Ω—É–∂–Ω—ã–µ ID –≤ config/telegram_channels.json")
        
        print("=" * 80)
        
        await client.disconnect()
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞: {e}")
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç GHOST Channel ID Scanner")
    print("–ü–æ–ª—É—á–µ–Ω–∏–µ ID Telegram –∫–∞–Ω–∞–ª–æ–≤ –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–∏–≥–Ω–∞–ª–æ–≤\n")
    
    await get_channel_ids()
    
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –°–∫–æ–ø–∏—Ä—É–π ID –Ω—É–∂–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤")
    print("2. –í—Å—Ç–∞–≤—å –∏—Ö –≤ config/telegram_channels.json")
    print("3. –ó–∞–ø—É—Å—Ç–∏ telegram listener: python3 scripts/start_telegram_listener.py")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\nüëã –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ")
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
