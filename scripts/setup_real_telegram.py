#!/usr/bin/env python3
"""
–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –†–ï–ê–õ–¨–ù–û–ì–û Telegram listener —Å API –∫–ª—é—á–∞–º–∏
"""

import os
import asyncio
import json
from datetime import datetime
from dotenv import load_dotenv

load_dotenv()

def get_telegram_credentials():
    """–ü–æ–ª—É—á–∏—Ç—å API –∫–ª—é—á–∏ Telegram"""
    
    print("üì± –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –†–ï–ê–õ–¨–ù–û–ì–û Telegram listener")
    print("=" * 50)
    
    api_id = os.getenv("TELEGRAM_API_ID")
    api_hash = os.getenv("TELEGRAM_API_HASH")
    
    if not api_id or not api_hash:
        print("‚ö†Ô∏è  API –∫–ª—é—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env.local")
        print()
        print("üìù –ü–æ–ª—É—á–∏—Ç–µ API –∫–ª—é—á–∏:")
        print("1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://my.telegram.org")
        print("2. –í–æ–π–¥–∏—Ç–µ —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
        print("3. –°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ 'API development tools'")
        print("4. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ api_id –∏ api_hash")
        print()
        
        api_id = input("–í–≤–µ–¥–∏—Ç–µ TELEGRAM_API_ID: ").strip()
        api_hash = input("–í–≤–µ–¥–∏—Ç–µ TELEGRAM_API_HASH: ").strip()
        
        if not api_id or not api_hash:
            print("‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º—ã –æ–±–∞ –∫–ª—é—á–∞!")
            return None, None
            
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ .env.local
        env_file = ".env.local"
        env_content = f"""
# Telegram API
TELEGRAM_API_ID={api_id}
TELEGRAM_API_HASH={api_hash}
TELEGRAM_SESSION_NAME=ghost_trader
"""
        
        if os.path.exists(env_file):
            with open(env_file, "a") as f:
                f.write(env_content)
        else:
            with open(env_file, "w") as f:
                f.write(env_content)
                
        print(f"‚úÖ –ö–ª—é—á–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {env_file}")
        
        # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
        load_dotenv(env_file)
    
    return api_id, api_hash

async def setup_telegram_session():
    """–°–æ–∑–¥–∞—Ç—å Telegram —Å–µ—Å—Å–∏—é"""
    
    api_id, api_hash = get_telegram_credentials()
    if not api_id or not api_hash:
        return False
    
    try:
        from telethon import TelegramClient
        
        session_name = "ghost_trader"
        print(f"\nüîß –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Å—Å–∏–∏ '{session_name}'...")
        
        client = TelegramClient(session_name, api_id, api_hash)
        await client.start()
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫–∫–∞—É–Ω—Ç–µ
        me = await client.get_me()
        print(f"‚úÖ –í—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω: {me.first_name} (@{me.username})")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–∞–Ω–∞–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        print("\nüìã –í–∞—à–∏ –∫–∞–Ω–∞–ª—ã:")
        channels_found = []
        
        async for dialog in client.iter_dialogs(limit=20):
            if dialog.is_channel and not dialog.is_group:
                channels_found.append({
                    'id': dialog.id,
                    'name': dialog.name,
                    'username': getattr(dialog.entity, 'username', None)
                })
                print(f"üì¢ {dialog.name} (ID: {dialog.id})")
        
        if not channels_found:
            print("‚ö†Ô∏è  –ö–∞–Ω–∞–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –∏–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∫–∞–Ω–∞–ª–æ–≤
        config_path = "news_engine/config/telegram_channels.yaml"
        os.makedirs(os.path.dirname(config_path), exist_ok=True)
        
        if channels_found:
            # –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ñ–∏–≥ —Å –Ω–∞–π–¥–µ–Ω–Ω—ã–º–∏ –∫–∞–Ω–∞–ª–∞–º–∏
            config_content = f"""# GHOST Telegram Channels Configuration (REAL)
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–æ {datetime.now().strftime('%Y-%m-%d %H:%M')}

channels:
"""
            for channel in channels_found[:5]:  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 5 –∫–∞–Ω–∞–ª–æ–≤
                config_content += f"""  - id: {channel['id']}
    name: "{channel['name']}"
    type: "universal"  # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    trigger: null
    
"""
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            config_content += """  # –ü—Ä–∏–º–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞:
  # - id: -1001234567890
  #   name: "Trading Signals"
  #   type: "trade"
  #   trigger: "LONG"  # –ò—Å–∫–∞—Ç—å —Å–∏–≥–Ω–∞–ª—ã —Å –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–æ–º
"""
            
        else:
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–º–µ—Ä –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
            config_content = f"""# GHOST Telegram Channels Configuration (TEMPLATE)
# –°–æ–∑–¥–∞–Ω–æ {datetime.now().strftime('%Y-%m-%d %H:%M')}
# –î–æ–±–∞–≤—å—Ç–µ ID –≤–∞—à–∏—Ö –∫–∞–Ω–∞–ª–æ–≤ –Ω–∏–∂–µ

channels:
  # –ü—Ä–∏–º–µ—Ä –∫–∞–Ω–∞–ª–∞ –¥–ª—è —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
  - id: -1001234567890  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID
    name: "Trading Signals Channel"
    type: "trade"
    trigger: "LONG"
    
  # –ü—Ä–∏–º–µ—Ä –Ω–æ–≤–æ—Å—Ç–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞
  - id: -1001111111111  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID
    name: "Crypto News"
    type: "news"
    trigger: null

# –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å ID –∫–∞–Ω–∞–ª–∞:
# 1. –î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ @userinfobot –≤ –∫–∞–Ω–∞–ª
# 2. –ë–æ—Ç –ø–æ–∫–∞–∂–µ—Ç chat_id –∫–∞–Ω–∞–ª–∞
# 3. –î–ª—è –ø—É–±–ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å @username
"""
        
        with open(config_path, "w", encoding="utf-8") as f:
            f.write(config_content)
            
        print(f"‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–∞–Ω–∞–ª–æ–≤ —Å–æ–∑–¥–∞–Ω–∞: {config_path}")
        
        await client.disconnect()
        
        print(f"\nüéâ Telegram —Å–µ—Å—Å–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞!")
        print(f"üìÅ –§–∞–π–ª —Å–µ—Å—Å–∏–∏: {session_name}.session")
        return True
        
    except ImportError:
        print("‚ùå –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ telethon –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: pip install telethon")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram: {e}")
        return False

def test_telegram_listener():
    """–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å Telegram listener"""
    
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram listener...")
    
    try:
        import subprocess
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º listener –Ω–∞ 10 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Ç–µ—Å—Ç–∞
        print("‚è∞ –ó–∞–ø—É—Å–∫ listener –Ω–∞ 10 —Å–µ–∫—É–Ω–¥...")
        
        process = subprocess.Popen([
            "python3", "news_engine/telegram_listener.py"
        ], stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        
        # –ñ–¥–µ–º 10 —Å–µ–∫—É–Ω–¥
        try:
            stdout, stderr = process.communicate(timeout=10)
            print("‚úÖ Listener —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ")
            
        except subprocess.TimeoutExpired:
            process.kill()
            print("‚úÖ Listener –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç (–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ —Ç–µ—Å—Ç–∞)")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
            output_dir = "news_engine/output"
            if os.path.exists(f"{output_dir}/module_status.json"):
                print("‚úÖ –°—Ç–∞—Ç—É—Å –º–æ–¥—É–ª—è —Å–æ–∑–¥–∞–Ω")
                
            if os.path.exists(f"{output_dir}/raw_logbook.json"):
                print("‚úÖ –õ–æ–≥–±—É–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å–æ–∑–¥–∞–Ω")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    
    print("üöÄ GHOST - –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –†–ï–ê–õ–¨–ù–û–ì–û Telegram")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    try:
        import telethon
        print("‚úÖ –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ telethon –Ω–∞–π–¥–µ–Ω–∞")
    except ImportError:
        print("üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é telethon...")
        os.system("pip install telethon")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–µ—Å—Å–∏—é
    success = await setup_telegram_session()
    
    if success:
        print("\n" + "=" * 50)
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º listener
        test_telegram_listener()
        
        print("\nüéâ –†–ï–ê–õ–¨–ù–´–ô Telegram listener –≥–æ—Ç–æ–≤!")
        print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ news_engine/config/telegram_channels.yaml")
        print("2. –î–æ–±–∞–≤—å—Ç–µ ID –≤–∞—à–∏—Ö –∫–∞–Ω–∞–ª–æ–≤")
        print("3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python news_engine/telegram_listener.py")
        print("4. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–µ–±-–¥–∞—à–±–æ—Ä–¥: http://localhost:3000/dashboard")
        
    else:
        print("\n‚ùå –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å")

if __name__ == "__main__":
    asyncio.run(main())
